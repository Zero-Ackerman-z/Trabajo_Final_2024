//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/ActionsControllers.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ActionsControllers: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ActionsControllers()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ActionsControllers"",
    ""maps"": [
        {
            ""name"": ""Game "",
            ""id"": ""a9f0d106-725b-4c0e-9bee-eb01fdbe22a5"",
            ""actions"": [
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""12b75446-a250-4ad0-90be-3aebada73fbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""1e0f76a1-f517-438d-b08e-2dc32da9cfc8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""K"",
                    ""type"": ""Button"",
                    ""id"": ""87c381e9-55bb-41b9-96ea-9608ace9109a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""06ba406b-ef5f-496a-9916-95c007558d89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D1"",
                    ""type"": ""Button"",
                    ""id"": ""6e2650a4-0c24-493c-a796-a500ba942e05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlechasLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2f41c2d3-250e-4c96-afbf-31c8ee97b810"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlechasUp"",
                    ""type"": ""Button"",
                    ""id"": ""b1971807-d2fc-4307-b837-ca36a0fbb607"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlechasDown"",
                    ""type"": ""Button"",
                    ""id"": ""8cdc9ec9-d22a-4a76-9c04-1e30a1d2cdea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlechasRight"",
                    ""type"": ""Button"",
                    ""id"": ""8af29c78-ad25-4b4d-8315-df030ed9f34e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""5f08e74c-f36c-4da5-aee5-caea0073a196"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""S"",
                    ""type"": ""Button"",
                    ""id"": ""b6974e54-553b-43b5-b4dc-37bc9d1d46f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""b23c227d-773b-4213-9943-7747f201fcc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6a46486d-d44a-49de-9b04-9000973e67c0"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae994d3f-f719-43c1-b0ca-303882180a69"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9781190e-0548-4a17-b6a7-67671a7ee012"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c13d3cf-9499-4e2a-855e-9dbac2be7a1b"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac90e104-0b6a-4c85-ab18-1e49c711f14d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlechasRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a56b8da4-4e5b-4795-af33-8770e6da4176"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlechasDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dc6baf4-d388-4bfb-8ce0-cd9448805997"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlechasUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9354e1fd-176c-4143-9945-6649d689d12e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlechasLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ac49da3-ebd6-4a8a-aacb-b2fabf0dd1e0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e69e0cc8-d75f-4c59-acbe-140241d28153"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93e178fc-fdad-432e-84b1-bfce9ff861ed"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""S"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f9f6c92-17f9-45e0-9662-7f10cdac6802"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""5876161d-8ade-4fe0-b14f-2fb6262f3257"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""81fba080-b878-4fc4-8ef1-85bbefd23eaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""a6ed858f-70fb-4b14-ac52-c9ed5cbc0412"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""5c18015b-3a09-4193-8dd8-844cb1c35ef5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""831cdd2a-b107-455d-8b72-a0ac8ba0f892"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3d36c00-395a-446a-af0f-3d3b11d7b0eb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b56a09d-9426-4f64-85ad-bbcc58389836"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""06f77749-0013-48c6-82a0-f218d3b3c194"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5950e3ff-1bd1-4759-9d14-384203dd32f3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""707cdfdd-1942-46ef-b225-b2b4a237345c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""01a6aee9-89b5-4b9b-909e-20be1620e528"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""354eb0d7-1cde-43ba-a99c-5acf6b4329c3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PaneController"",
            ""id"": ""23e49717-1e03-461a-b173-90086760d566"",
            ""actions"": [
                {
                    ""name"": ""DFJK Panel"",
                    ""type"": ""Value"",
                    ""id"": ""b25b9b09-c99a-4cd6-8177-4e4001a73f99"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""99e5d204-c95d-4b30-98cd-3c9d4638db33"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DFJK Panel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1e58187c-52e1-47c9-80c2-b15de9406ff8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DFJK Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9ecf21a-bcd1-443b-99a9-5d7d906568c6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DFJK Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e51dab46-39f5-46c3-a551-80acd069d209"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DFJK Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ee33c83c-f37d-47fa-a341-fbdf2765113f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DFJK Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Game UI"",
            ""id"": ""ca8e8509-8cc1-488c-8877-6d3d5d3cf823"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""9a3c8ccc-dbd2-446f-a59a-b3d5fa0c6b67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""ddee2892-0d0d-4ab2-b9a6-6fea8042dfaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""06dc5f71-f5f1-4516-963a-1653a1da9490"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e65ab90b-6964-428d-9572-bc8bcedd9ccf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdc69237-5cce-4b92-bbc8-a6ca2723324e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""inputActions"",
            ""bindingGroup"": ""inputActions"",
            ""devices"": []
        }
    ]
}");
        // Game 
        m_Game = asset.FindActionMap("Game ", throwIfNotFound: true);
        m_Game_F = m_Game.FindAction("F", throwIfNotFound: true);
        m_Game_J = m_Game.FindAction("J", throwIfNotFound: true);
        m_Game_K = m_Game.FindAction("K", throwIfNotFound: true);
        m_Game_D = m_Game.FindAction("D", throwIfNotFound: true);
        m_Game_D1 = m_Game.FindAction("D1", throwIfNotFound: true);
        m_Game_FlechasLeft = m_Game.FindAction("FlechasLeft", throwIfNotFound: true);
        m_Game_FlechasUp = m_Game.FindAction("FlechasUp", throwIfNotFound: true);
        m_Game_FlechasDown = m_Game.FindAction("FlechasDown", throwIfNotFound: true);
        m_Game_FlechasRight = m_Game.FindAction("FlechasRight", throwIfNotFound: true);
        m_Game_A = m_Game.FindAction("A", throwIfNotFound: true);
        m_Game_S = m_Game.FindAction("S", throwIfNotFound: true);
        m_Game_W = m_Game.FindAction("W", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Select = m_UI.FindAction("Select", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        // PaneController
        m_PaneController = asset.FindActionMap("PaneController", throwIfNotFound: true);
        m_PaneController_DFJKPanel = m_PaneController.FindAction("DFJK Panel", throwIfNotFound: true);
        // Game UI
        m_GameUI = asset.FindActionMap("Game UI", throwIfNotFound: true);
        m_GameUI_Back = m_GameUI.FindAction("Back", throwIfNotFound: true);
        m_GameUI_Select = m_GameUI.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game 
    private readonly InputActionMap m_Game;
    private List<IGameActions> m_GameActionsCallbackInterfaces = new List<IGameActions>();
    private readonly InputAction m_Game_F;
    private readonly InputAction m_Game_J;
    private readonly InputAction m_Game_K;
    private readonly InputAction m_Game_D;
    private readonly InputAction m_Game_D1;
    private readonly InputAction m_Game_FlechasLeft;
    private readonly InputAction m_Game_FlechasUp;
    private readonly InputAction m_Game_FlechasDown;
    private readonly InputAction m_Game_FlechasRight;
    private readonly InputAction m_Game_A;
    private readonly InputAction m_Game_S;
    private readonly InputAction m_Game_W;
    public struct GameActions
    {
        private @ActionsControllers m_Wrapper;
        public GameActions(@ActionsControllers wrapper) { m_Wrapper = wrapper; }
        public InputAction @F => m_Wrapper.m_Game_F;
        public InputAction @J => m_Wrapper.m_Game_J;
        public InputAction @K => m_Wrapper.m_Game_K;
        public InputAction @D => m_Wrapper.m_Game_D;
        public InputAction @D1 => m_Wrapper.m_Game_D1;
        public InputAction @FlechasLeft => m_Wrapper.m_Game_FlechasLeft;
        public InputAction @FlechasUp => m_Wrapper.m_Game_FlechasUp;
        public InputAction @FlechasDown => m_Wrapper.m_Game_FlechasDown;
        public InputAction @FlechasRight => m_Wrapper.m_Game_FlechasRight;
        public InputAction @A => m_Wrapper.m_Game_A;
        public InputAction @S => m_Wrapper.m_Game_S;
        public InputAction @W => m_Wrapper.m_Game_W;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void AddCallbacks(IGameActions instance)
        {
            if (instance == null || m_Wrapper.m_GameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameActionsCallbackInterfaces.Add(instance);
            @F.started += instance.OnF;
            @F.performed += instance.OnF;
            @F.canceled += instance.OnF;
            @J.started += instance.OnJ;
            @J.performed += instance.OnJ;
            @J.canceled += instance.OnJ;
            @K.started += instance.OnK;
            @K.performed += instance.OnK;
            @K.canceled += instance.OnK;
            @D.started += instance.OnD;
            @D.performed += instance.OnD;
            @D.canceled += instance.OnD;
            @D1.started += instance.OnD1;
            @D1.performed += instance.OnD1;
            @D1.canceled += instance.OnD1;
            @FlechasLeft.started += instance.OnFlechasLeft;
            @FlechasLeft.performed += instance.OnFlechasLeft;
            @FlechasLeft.canceled += instance.OnFlechasLeft;
            @FlechasUp.started += instance.OnFlechasUp;
            @FlechasUp.performed += instance.OnFlechasUp;
            @FlechasUp.canceled += instance.OnFlechasUp;
            @FlechasDown.started += instance.OnFlechasDown;
            @FlechasDown.performed += instance.OnFlechasDown;
            @FlechasDown.canceled += instance.OnFlechasDown;
            @FlechasRight.started += instance.OnFlechasRight;
            @FlechasRight.performed += instance.OnFlechasRight;
            @FlechasRight.canceled += instance.OnFlechasRight;
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @S.started += instance.OnS;
            @S.performed += instance.OnS;
            @S.canceled += instance.OnS;
            @W.started += instance.OnW;
            @W.performed += instance.OnW;
            @W.canceled += instance.OnW;
        }

        private void UnregisterCallbacks(IGameActions instance)
        {
            @F.started -= instance.OnF;
            @F.performed -= instance.OnF;
            @F.canceled -= instance.OnF;
            @J.started -= instance.OnJ;
            @J.performed -= instance.OnJ;
            @J.canceled -= instance.OnJ;
            @K.started -= instance.OnK;
            @K.performed -= instance.OnK;
            @K.canceled -= instance.OnK;
            @D.started -= instance.OnD;
            @D.performed -= instance.OnD;
            @D.canceled -= instance.OnD;
            @D1.started -= instance.OnD1;
            @D1.performed -= instance.OnD1;
            @D1.canceled -= instance.OnD1;
            @FlechasLeft.started -= instance.OnFlechasLeft;
            @FlechasLeft.performed -= instance.OnFlechasLeft;
            @FlechasLeft.canceled -= instance.OnFlechasLeft;
            @FlechasUp.started -= instance.OnFlechasUp;
            @FlechasUp.performed -= instance.OnFlechasUp;
            @FlechasUp.canceled -= instance.OnFlechasUp;
            @FlechasDown.started -= instance.OnFlechasDown;
            @FlechasDown.performed -= instance.OnFlechasDown;
            @FlechasDown.canceled -= instance.OnFlechasDown;
            @FlechasRight.started -= instance.OnFlechasRight;
            @FlechasRight.performed -= instance.OnFlechasRight;
            @FlechasRight.canceled -= instance.OnFlechasRight;
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @S.started -= instance.OnS;
            @S.performed -= instance.OnS;
            @S.canceled -= instance.OnS;
            @W.started -= instance.OnW;
            @W.performed -= instance.OnW;
            @W.canceled -= instance.OnW;
        }

        public void RemoveCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameActions instance)
        {
            foreach (var item in m_Wrapper.m_GameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameActions @Game => new GameActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Select;
    private readonly InputAction m_UI_Back;
    private readonly InputAction m_UI_Navigate;
    public struct UIActions
    {
        private @ActionsControllers m_Wrapper;
        public UIActions(@ActionsControllers wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_UI_Select;
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // PaneController
    private readonly InputActionMap m_PaneController;
    private List<IPaneControllerActions> m_PaneControllerActionsCallbackInterfaces = new List<IPaneControllerActions>();
    private readonly InputAction m_PaneController_DFJKPanel;
    public struct PaneControllerActions
    {
        private @ActionsControllers m_Wrapper;
        public PaneControllerActions(@ActionsControllers wrapper) { m_Wrapper = wrapper; }
        public InputAction @DFJKPanel => m_Wrapper.m_PaneController_DFJKPanel;
        public InputActionMap Get() { return m_Wrapper.m_PaneController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PaneControllerActions set) { return set.Get(); }
        public void AddCallbacks(IPaneControllerActions instance)
        {
            if (instance == null || m_Wrapper.m_PaneControllerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PaneControllerActionsCallbackInterfaces.Add(instance);
            @DFJKPanel.started += instance.OnDFJKPanel;
            @DFJKPanel.performed += instance.OnDFJKPanel;
            @DFJKPanel.canceled += instance.OnDFJKPanel;
        }

        private void UnregisterCallbacks(IPaneControllerActions instance)
        {
            @DFJKPanel.started -= instance.OnDFJKPanel;
            @DFJKPanel.performed -= instance.OnDFJKPanel;
            @DFJKPanel.canceled -= instance.OnDFJKPanel;
        }

        public void RemoveCallbacks(IPaneControllerActions instance)
        {
            if (m_Wrapper.m_PaneControllerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPaneControllerActions instance)
        {
            foreach (var item in m_Wrapper.m_PaneControllerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PaneControllerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PaneControllerActions @PaneController => new PaneControllerActions(this);

    // Game UI
    private readonly InputActionMap m_GameUI;
    private List<IGameUIActions> m_GameUIActionsCallbackInterfaces = new List<IGameUIActions>();
    private readonly InputAction m_GameUI_Back;
    private readonly InputAction m_GameUI_Select;
    public struct GameUIActions
    {
        private @ActionsControllers m_Wrapper;
        public GameUIActions(@ActionsControllers wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_GameUI_Back;
        public InputAction @Select => m_Wrapper.m_GameUI_Select;
        public InputActionMap Get() { return m_Wrapper.m_GameUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameUIActions set) { return set.Get(); }
        public void AddCallbacks(IGameUIActions instance)
        {
            if (instance == null || m_Wrapper.m_GameUIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameUIActionsCallbackInterfaces.Add(instance);
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
        }

        private void UnregisterCallbacks(IGameUIActions instance)
        {
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
        }

        public void RemoveCallbacks(IGameUIActions instance)
        {
            if (m_Wrapper.m_GameUIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameUIActions instance)
        {
            foreach (var item in m_Wrapper.m_GameUIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameUIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameUIActions @GameUI => new GameUIActions(this);
    private int m_inputActionsSchemeIndex = -1;
    public InputControlScheme inputActionsScheme
    {
        get
        {
            if (m_inputActionsSchemeIndex == -1) m_inputActionsSchemeIndex = asset.FindControlSchemeIndex("inputActions");
            return asset.controlSchemes[m_inputActionsSchemeIndex];
        }
    }
    public interface IGameActions
    {
        void OnF(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnK(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnD1(InputAction.CallbackContext context);
        void OnFlechasLeft(InputAction.CallbackContext context);
        void OnFlechasUp(InputAction.CallbackContext context);
        void OnFlechasDown(InputAction.CallbackContext context);
        void OnFlechasRight(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnS(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
    }
    public interface IPaneControllerActions
    {
        void OnDFJKPanel(InputAction.CallbackContext context);
    }
    public interface IGameUIActions
    {
        void OnBack(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
